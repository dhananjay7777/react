https://github.com/acdlite/react-fiber-architecture


1.The createRoot create's its own DOM and then compare it with the web browser's DOM and only update those components which are actually updated.
2.But the browser removes the whole DOM and then recrates the whole DOM with the updated values this is called reload.
3. However virtual DOM tracks whole DOM like a tree like structure and updates only those values which were only changed.
4. But some values depends on network call so if we update a value it might get update immediately via a network call.
5. So we will have to update it again. To avoid this overhead we can drop the updation calls for the immediate value update.
6. The current algo used by the React is called the React Fibre algo.
7. The algo react uses to differentiate the web browser's tree and React's tree formed through create root is called reconciliation.
8. Reconciliation is the algo behind what popularly known as the Virtual-DOM.
9.In UI it is not necessary for every update to be applied immediately. 



All About D0M

The Virtual DOM (Document Object Model) is a concept used in React and some other JavaScript frameworks to improve the efficiency of updating the user interface (UI). It acts as a lightweight copy or representation of the actual DOM in memory.

Here's how the Virtual DOM works in React:

Render Virtual DOM:

When a React component renders, it doesn't directly manipulate the actual DOM. Instead, it creates a virtual representation of the UI components and their structure in the form of a JavaScript object.
Determine Changes:

When the state or props of a component change, React creates a new virtual DOM representing the updated UI.
Diffing Algorithm:

React then uses a process called "reconciliation" or "diffing" to compare the new virtual DOM with the previous one. It calculates the difference (diff) between the two virtual DOM trees.
Update Only Changes:

Instead of updating the entire actual DOM with the new UI, React determines the minimal set of changes needed to bring the actual DOM in sync with the new virtual DOM.
Efficient Updates:

React updates only the parts of the actual DOM that have changed, making the process more efficient than re-rendering the entire DOM.