import "./App.css";

function App() {
   //1) When we don't have a key
   const ipl = ["csk", "mi", "lsk", "rcb"];
   const result = ipl.map((x, index) => (
      <h1 key={index}>
         {x} and index is {index}
      </h1>
   ));

   // 2) When we have a value we can use as key
   // if we have object with unique keys we don't use index as the key
   const pl = [
      { id: "1a", name: "Man U" },
      { id: "2a", name: "FCB" },
      { id: "3a", name: "Man C" },
   ];

   // as id is unique, it can be used as a key
   const team = pl.map((x) => (
      <h2 key={x.id}>
         {x.name} is the team name and id is {x.id}
      </h2>
   ));

   // 3) Using map directly inside return
   const items = [
      { id: 1, name: "Item 1" },
      { id: 2, name: "Item 2" },
      { id: 3, name: "Item 3" },
   ];
   return (
      <>
         <h3>{result}</h3>
         <h3>{team}</h3>

         {items.map((item) => (
            <li key={item.id}>{item.name}</li>
         ))}
      </>
   );
}

export default App;

// The map() function in JavaScript is a method used to iterate over an array and create a new array by applying a function to each element of the original array. The map() function doesn't modify the original array; instead, it returns a new array with the results of calling the provided function on each element.

// Here's the basic syntax of the map() function:
// const newArray = array.map((currentValue, index, array) => {
//   // Return the new element value
// });

// array: The original array you want to iterate over.
// currentValue: The current element being processed in the array.
// index (optional): The index of the current element being processed in the array.
// array (optional): The array map() was called upon.

//
//
//{result}: This is an expression inside curly braces {}. In JSX, curly braces are used to embed JavaScript
//  expressions. Here, result is an array of JSX elements generated by the map function earlier in your code.
//  By placing {result} inside the JSX, you're telling React to render the elements contained within the
// result array at this position in the DOM.
